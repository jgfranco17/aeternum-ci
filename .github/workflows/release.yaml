name: Production Release

on:
  push:
    paths:
      - "specs.json"

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version: "1.21.4"

      - name: Install Just
        uses: extractions/setup-just@v2

      - name: Install Go modules
        run: |
          just tidy

      - name: Run tests
        run: |
          just test

  release:
    runs-on: ubuntu-latest
    if: ${{ github.event.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
    needs: verify
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Golang
        uses: actions/setup-go@v5
        with:
          go-version: "1.21.4"

      - name: Extract version from TOML
        id: extract-version
        run: |
          ./compare_versions.sh
          VERSION=$(grep -oP '^version = "\K[^"]+' pyproject.toml)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Install Github CLI
        run: |
          sudo apt-get install gh

      - name: Fetch release notes
        id: read-notes
        run: |
          NOTES=$(cat .github/release/${{ env.VERSION }}.md | base64)
          echo "ENCODED_NOTES=$NOTES" >> $GITHUB_ENV

      - name: Post release notes to summary
        if: success()
        run: |
          cat .github/release/${{ env.VERSION }}.md >> $GITHUB_STEP_SUMMARY

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}
        run: |
          NOTES=$(echo "${{ env.ENCODED_NOTES }}" | base64 --decode)
          gh release create "${{ env.VERSION }}" --title "${{ env.VERSION }}" --notes "${{ env.NOTES }}" dist/*
